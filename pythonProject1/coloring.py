'''
그림과 같이 인덱스가 있는 10x10 격자에 빨간색과 파란색을 칠하려고 한다.

N개의 영역에 대해 왼쪽 위와 오른쪽 아래 모서리 인덱스, 칠할 색상이 주어질 때, 칠이 끝난 후 색이 겹쳐 보라색이 된 칸 수를 구하는 프로그램을 만드시오.

주어진 정보에서 같은 색인 영역은 겹치지 않는다.
예를 들어 2개의 색칠 영역을 갖는 위 그림에 대한 색칠 정보이다.

2

2 2 4 4 1  ( [2,2] 부터 [4,4] 까지 color 1 (빨강) 으로 칠한다 )

3 3 6 6 2 ( [3,3] 부터 [6,6] 까지 color 2 (파랑) 으로 칠한다 )

[입력]

첫 줄에 테스트 케이스 개수 T가 주어진다.   ( 1 ≤ T ≤ 50 )

다음 줄부터 테스트케이스의 첫 줄에 칠할 영역의 개수 N이 주어진다. ( 2 ≤ N ≤ 30 )

다음 줄에 왼쪽 위 모서리 인덱스 r1, c1, 오른쪽 아래 모서리 r2, c2와 색상 정보 color가 주어진다. ( 0 ≤ r1, c1, r2, c2 ≤ 9 )

color = 1 (빨강), color = 2 (파랑)
'''

T = int(input())

for tc in range(1, T+1):
    N = int(input())
    arr = [[0] * 10 for _ in range(10)]                              # 10x10 크기의 격자 생성
    info = [list(map(int, input().split())) for _ in range(N)]       # 색칠 정보 리스트 설정
    purple_data = 0                                                  # 보라색 칸 수 0이라 설정

    for i in range(N):
        r1, c1, r2, c2, color = info[i]                              # 색칠 정보에서 색상 정보와 좌표 추출
        for r in range(r1, r2+1):                                    # 색칠할 행의 범위
            for c in range(c1, c2+1):                                # 색칠할 열의 범위
                if arr[r][c] != color:                               # 현재 칸의 색이 칠할 색상과 다르고
                    if arr[r][c] == 0:                               # 빈칸(0)일 경우
                        arr[r][c] = color                            # 칠할 색상으로 변경함
                    else:                                            # 다른 색이 칠해진 경우
                        arr[r][c] = 3                                # 두 색이 겹치는 보라색으로 변경(빨강은 1, 파랑은 2를 할당했으므로, 보라는 3을 설정)
                        purple_data += 1                             # 보라색 칸 수 1씩 증가
    print(f'#{tc} {purple_data}')
